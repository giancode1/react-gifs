{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","cate","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","c","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB7C,OACI,qCACI,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,SACVP,GAAc,SAAAQ,GAAI,OAAKN,GAAL,mBAAmBM,OACrCL,EAAc,MAKd,SACI,uBACIM,KAAK,OACLC,MAAOR,EACPS,SAlBU,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,YAoBnB,4BAAIR,Q,+BC1BHW,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKf,EAAKgB,IAAKN,QCDnBO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EACZb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAkBtC,OAZAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAEGqB,EDhBwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGIH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEfhBgB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,cAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAU9B,OACI,qCACG,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,oDAAuB0C,KACvB,uBACC,6BAEQA,EAAWnB,KAAK,SAACoB,EAAEC,GAAH,OAChB,cAAC,EAAD,CAAS9B,SAAU6B,GAAQA,Y,MClB/CE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f6034853.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        //console.log('submit hecho')\r\n        if(inputValue.trim()) {\r\n            setCategories(cate => [inputValue,...cate,] )\r\n            setInputValue('') \r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <p>{inputValue}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","//helpers: funciones que reciben algo y retornan algo\r\n\r\nexport const getGifs = async(category) => {\r\n    //console.log('me llego esta categoria', category)\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=ipcsgMPL6C2ztKNjIHLJ3DMKJdWh465V`\r\n    const resp = await fetch(url)\r\n    const {data} = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    //setImages(gifs)\r\n    return gifs\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={url} alt={title} />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category)\r\n \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n\r\n        <div className=\"card-grid\"> \r\n        {   \r\n\r\n            images.map( img => \r\n                <GifGridItem \r\n                    key={img.id} \r\n                    {...img}   \r\n                />\r\n            )\r\n        }      \r\n        </div>\r\n        </>\r\n    )\r\n}","//Custom Hook\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport {getGifs} from '../components/helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect(() => { \r\n        getGifs(category)\r\n            .then( imgs => {\r\n                // setTimeout(() => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                // }, 1000);\r\n            })\r\n    }, [category] )\r\n\r\n    return state // {data:[], loading: true}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React , {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['One punch'])\r\n    \r\n    // const handleAdd = () => {\r\n    //     //setCategories(cate => [...cate, 'Heroe del escudo'])\r\n    //     setCategories([...categories, 'Heroe del escudo'])\r\n    // }\r\n    // <button onClick={handleAdd}>agregar</button>\r\n\r\n    return (\r\n        <>\r\n           <h2>GiftExpertApp</h2> \r\n           <AddCategory setCategories={setCategories} />\r\n           <p>las categorias son:{categories}</p>\r\n           <hr />\r\n            <ol>\r\n                {\r\n                    categories.map( (c,i) => \r\n                    <GifGrid category={c} key={c} />\r\n                        // <li key={i}> {c} </li>\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n//\n\n\n\n"],"sourceRoot":""}